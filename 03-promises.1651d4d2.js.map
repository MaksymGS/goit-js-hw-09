{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAGFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,QAAQC,IAAI,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,OAC1DM,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAwCH,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAEvES,OAAM,SAAAP,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,QAAQC,IAAI,sBAAuCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,OACzDM,EAAAtB,GAASuB,OAAOG,QAAQ,sBAAqCL,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IArBzEd,EAAKyB,iBAAiB,SA0BtB,SAAqBC,GACnBC,EAASD,EAAIE,OAAOC,MAAQH,EAAIE,OAAOE,K,IA1BzC9B,EAAKyB,iBAAiB,UA6BtB,SAAuBC,GACrBA,EAAIK,iBAEJ,IADA,IAAQjB,EAAwBa,EAAxBb,MAAOkB,EAAiBL,EAAjBK,KAAMC,EAAWN,EAAXM,OACZC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAClC,IAAIrB,EAAWqB,EAAI,EACfC,EAAYC,OAAOtB,GAASoB,EAAIE,OAAOJ,GAC3C7B,EAAcU,EAAUsB,E,KAX5B,IAAMR,EAAW,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nform.addEventListener('input', handlerForm);\nform.addEventListener('submit', handlerSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nconst formData = {};\nfunction handlerForm(evt) {\n  formData[evt.target.name] = evt.target.value;\n }\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = formData;\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    let delayStep = Number(delay) + i * Number(step);\n    createPromise(position, delayStep);\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","evt","$ce04d3a99e08e73b$var$formData","target","name","value","preventDefault","step","amount","i","delayStep","Number"],"version":3,"file":"03-promises.1651d4d2.js.map"}