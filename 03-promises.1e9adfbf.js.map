{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAGRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,QAAQC,IAAI,uBAAqBJ,QAAiBC,OAClDI,EAAApB,GAASqB,OAAOC,QAAQ,uBAAqBP,QAAiBC,MAAU,IAEzEO,OAAM,EAACR,SAAEA,EAAQC,MAAEA,MAClBE,QAAQC,IAAI,sBAAoBJ,QAAiBC,OACjDI,EAAApB,GAASqB,OAAOG,QAAQ,sBAAoBT,QAAeC,MAAU,G,CArB3Ed,EAAKuB,iBAAiB,SA0BtB,SAAqBC,GACnBC,EAASD,EAAIE,OAAOC,MAAQH,EAAIE,OAAOE,K,IA1BzC5B,EAAKuB,iBAAiB,UA6BtB,SAAuBC,GACrBA,EAAIK,iBACJ,MAAMf,MAAEA,EAAKgB,KAAEA,EAAIC,OAAEA,GAAWN,EAChC,IAAK,IAAIO,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAClC,IAAInB,EAAWmB,EAAI,EACfC,EAAYC,OAAOpB,GAASkB,EAAIE,OAAOJ,GAC3C3B,EAAcU,EAAUoB,E,KAX5B,MAAMR,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nform.addEventListener('input', handlerForm);\nform.addEventListener('submit', handlerSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nconst formData = {};\nfunction handlerForm(evt) {\n  formData[evt.target.name] = evt.target.value;\n }\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = formData;\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    let delayStep = Number(delay) + i * Number(step);\n    createPromise(position, delayStep);\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","console","log","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","evt","$47d4ff9957288465$var$formData","target","name","value","preventDefault","step","amount","i","delayStep","Number"],"version":3,"file":"03-promises.1e9adfbf.js.map"}